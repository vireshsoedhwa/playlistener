version: '3.8'

services:
  apidb:
    image: postgres:alpine
    volumes:
      - dataapi:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    networks:
      playlistener-network:

  app:
    image: playlistenerapi
    # command:
    #   - /bin/sh
    #   - -c
    #   - |
    #     (cd app && npm install)
    #     (cd app && npm run build)
    #     python manage.py runserver 0.0.0.0:8080
    # python manage.py runserver_plus 0.0.0.0:8080 --cert-file cert.crt
    command:
      - /bin/sh
      - -c
      - |
        python manage.py runserver 0.0.0.0:8080
    build:
      context: .
      args:
        - VERSION=dev
    depends_on:
      - apidb
    volumes:
      - .:/code
    environment:
      - DEBUG=1
      - DJANGO_SECRET_KEY=654564ytffff55474fjddgdg
      - POSTGRES_HOST=apidb
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin
    ports:
      - "8080:8080"
      - "8000:8000"
      - "3000:3000"
    networks:
      playlistener-network:
        aliases:
          - playlistenerapi

volumes:
  dataapi:
    # external: true

networks:
  playlistener-network:
    external: true
    driver: bridge
    name: playlistener-network
